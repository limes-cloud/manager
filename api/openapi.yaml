# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Service API
    version: 0.0.1
paths:
    /manager/v1/auth:
        post:
            tags:
                - Service
            operationId: Service_Auth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/department:
        put:
            tags:
                - Service
            description: UpdateDepartment 更新部门信息
            operationId: Service_UpdateDepartment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDepartmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            description: AddDepartment 删除部门信息
            operationId: Service_AddDepartment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddDepartmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            description: DeleteDepartment 删除部门信息
            operationId: Service_DeleteDepartment
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/department/tree:
        get:
            tags:
                - Service
            description: GetDepartmentTree 获取部门树
            operationId: Service_GetDepartmentTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDepartmentTreeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/login:
        post:
            tags:
                - Service
            operationId: Service_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/login/captcha:
        post:
            tags:
                - Service
            operationId: Service_LoginCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/logout:
        post:
            tags:
                - Service
            operationId: Service_Logout
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/menu:
        put:
            tags:
                - Service
            description: UpdateMenu 更新菜单
            operationId: Service_UpdateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            description: AddMenu 新增菜单
            operationId: Service_AddMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            description: DeleteMenu 删除菜单
            operationId: Service_DeleteMenu
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/menu/tree:
        get:
            tags:
                - Service
            description: GetMenuTree 获取菜单树
            operationId: Service_GetMenuTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMenuTreeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/role:
        put:
            tags:
                - Service
            description: UpdateRole 更新角色
            operationId: Service_UpdateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            description: AddRole 新增角色
            operationId: Service_AddRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            description: DeleteRole 删除角色
            operationId: Service_DeleteRole
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/role/menu:
        put:
            tags:
                - Service
            description: AddRoleMenus 更新角色菜单
            operationId: Service_UpdateRoleMenus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/role/menu/ids:
        get:
            tags:
                - Service
            description: CurrentRoleMenus 获取当前用户的角色列表
            operationId: Service_GetRoleMenuIds
            parameters:
                - name: roleId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleMenuIdsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/role/menu/tree:
        get:
            tags:
                - Service
            description: CurrentRoleMenus 获取当前用户的角色列表
            operationId: Service_CurrentRoleMenuTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CurrentRoleMenuTreeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/role/tree:
        get:
            tags:
                - Service
            description: GetRoleTree 获取角色树
            operationId: Service_GetRoleTree
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleTreeReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/setting:
        get:
            tags:
                - Service
            description: GetSetting 获取当前系统的配置
            operationId: Service_GetSetting
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSettingReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/token/parse:
        post:
            tags:
                - Service
            operationId: Service_ParseToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ParseTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/token/refresh:
        post:
            tags:
                - Service
            operationId: Service_RefreshToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user:
        put:
            tags:
                - Service
            description: UpdateUser 更新用户信息
            operationId: Service_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Service
            description: AddUser 新增用户信息
            operationId: Service_AddUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Service
            description: DeleteUser 删除用户信息
            operationId: Service_DeleteUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/basic:
        put:
            tags:
                - Service
            description: UpdateUserBasic 更新用户基础信息
            operationId: Service_UpdateUserBasic
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserBasicRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/current:
        get:
            tags:
                - Service
            description: CurrentUser 获取当前用户信息
            operationId: Service_CurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/current/roles:
        get:
            tags:
                - Service
            description: CurrentUserRoles 获取当前用户的角色列表
            operationId: Service_CurrentUserRoles
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserRolesReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/disable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_DisableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DisableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/enable:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_EnableUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EnableUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/offline:
        post:
            tags:
                - Service
            description: DisableUser 禁用用户
            operationId: Service_OfflineUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OfflineUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/password/captcha:
        post:
            tags:
                - Service
            description: ChangeUserPasswordCaptcha 用户修改密码验证码
            operationId: Service_ChangeUserPasswordCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeUserPasswordCaptchaReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/password/change:
        post:
            tags:
                - Service
            description: ChangeUserPassword 用户修改密码
            operationId: Service_ChangeUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/password/reset:
        post:
            tags:
                - Service
            description: ResetUserPassword 重置用户密码
            operationId: Service_ResetUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/role/switch:
        post:
            tags:
                - Service
            description: SwitchCurrentUserRole 切换用户当前角色
            operationId: Service_SwitchCurrentUserRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SwitchCurrentUserRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SwitchCurrentUserRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/user/roles:
        get:
            tags:
                - Service
            description: CurrentUserRoles 获取当前用户的角色列表
            operationId: Service_GetUserRoles
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserRolesReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/v1/users:
        get:
            tags:
                - Service
            description: PageUser 新增用户信息
            operationId: Service_PageUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: username
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: boolean
                - name: roleId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: departmentId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: startTime
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: endTime
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PageUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddDepartmentRequest:
            type: object
            properties:
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                description:
                    type: string
        AddMenuRequest:
            type: object
            properties:
                parentId:
                    type: integer
                    format: uint32
                app:
                    type: string
                title:
                    type: string
                type:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                keyword:
                    type: string
                permission:
                    type: string
                component:
                    type: string
                api:
                    type: string
                method:
                    type: string
                redirect:
                    type: string
                weight:
                    type: integer
                    format: int32
                isHidden:
                    type: boolean
                isCache:
                    type: boolean
                isHome:
                    type: boolean
                isAffix:
                    type: boolean
        AddRoleRequest:
            type: object
            properties:
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                status:
                    type: boolean
                description:
                    type: string
                departmentIds:
                    type: string
                dataScope:
                    type: string
        AddUserRequest:
            type: object
            properties:
                departmentId:
                    type: integer
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                name:
                    type: string
                gender:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                status:
                    type: boolean
        AuthRequest:
            type: object
            properties:
                path:
                    type: string
                method:
                    type: string
        ChangeUserPasswordCaptchaReply:
            type: object
            properties:
                uuid:
                    type: string
                captcha:
                    type: string
                expire:
                    type: integer
                    format: uint32
        ChangeUserPasswordRequest:
            type: object
            properties:
                password:
                    type: string
                captchaId:
                    type: string
                captcha:
                    type: string
        CurrentRoleMenuTreeReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
        Department:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/Department'
        DisableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                desc:
                    type: string
        EnableUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        GetDepartmentTreeReply:
            type: object
            properties:
                department:
                    $ref: '#/components/schemas/Department'
        GetMenuTreeReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
        GetRoleMenuIdsReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        type: integer
                        format: uint32
        GetRoleTreeReply:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
            description: 获取当前的角色列表返回
        GetSettingReply:
            type: object
            properties:
                name:
                    type: string
                debug:
                    type: boolean
                title:
                    type: string
                desc:
                    type: string
                copyright:
                    type: string
                logo:
                    type: string
        GetUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetUserRolesReply:
            type: object
            properties:
                userRole:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserRole'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        LoginCaptchaReply:
            type: object
            properties:
                uuid:
                    type: string
                captcha:
                    type: string
                expire:
                    type: integer
                    format: uint32
        LoginReply:
            type: object
            properties:
                token:
                    type: string
        LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                captchaId:
                    type: string
                captcha:
                    type: string
            description: UserLoginRequest 用户登录
        Menu:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                title:
                    type: string
                type:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                keyword:
                    type: string
                permission:
                    type: string
                component:
                    type: string
                api:
                    type: string
                method:
                    type: string
                redirect:
                    type: string
                weight:
                    type: integer
                    format: int32
                isHidden:
                    type: boolean
                isCache:
                    type: boolean
                isHome:
                    type: boolean
                isAffix:
                    type: boolean
                app:
                    type: string
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        OfflineUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        PageUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        ParseTokenReply:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                roleId:
                    type: integer
                    format: uint32
        RefreshTokenReply:
            type: object
            properties:
                token:
                    type: string
        ResetUserPasswordRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        Role:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                status:
                    type: boolean
                description:
                    type: string
                departmentIds:
                    type: string
                dataScope:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SwitchCurrentUserRoleReply:
            type: object
            properties:
                token:
                    type: string
        SwitchCurrentUserRoleRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    format: uint32
        UpdateDepartmentRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                description:
                    type: string
        UpdateMenuRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                title:
                    type: string
                type:
                    type: string
                icon:
                    type: string
                path:
                    type: string
                keyword:
                    type: string
                permission:
                    type: string
                component:
                    type: string
                api:
                    type: string
                method:
                    type: string
                redirect:
                    type: string
                weight:
                    type: integer
                    format: int32
                isHidden:
                    type: boolean
                isCache:
                    type: boolean
                isHome:
                    type: boolean
                isAffix:
                    type: boolean
        UpdateRoleMenuRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    format: uint32
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        UpdateRoleRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                status:
                    type: boolean
                description:
                    type: string
                departmentIds:
                    type: string
                dataScope:
                    type: string
        UpdateUserBasicRequest:
            type: object
            properties:
                nickname:
                    type: string
                gender:
                    type: string
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                departmentId:
                    type: integer
                    format: uint32
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                name:
                    type: string
                gender:
                    type: string
                phone:
                    type: string
                email:
                    type: string
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                departmentId:
                    type: integer
                    format: uint32
                roleId:
                    type: integer
                    format: uint32
                name:
                    type: string
                nickname:
                    type: string
                gender:
                    type: string
                phone:
                    type: string
                avatar:
                    type: string
                email:
                    type: string
                status:
                    type: boolean
                disabled:
                    type: string
                lastLogin:
                    type: integer
                    format: uint32
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                department:
                    $ref: '#/components/schemas/Department'
                role:
                    $ref: '#/components/schemas/Role'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
        UserRole:
            type: object
            properties:
                userId:
                    type: integer
                    format: uint32
                roleId:
                    type: integer
                    format: uint32
                role:
                    $ref: '#/components/schemas/Role'
                user:
                    $ref: '#/components/schemas/User'
tags:
    - name: Service
