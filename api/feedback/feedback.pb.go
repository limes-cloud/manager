// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: api/feedback/proto/feedback.proto

package feedback

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListFeedbackCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Order    *string `protobuf:"bytes,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	OrderBy  *string `protobuf:"bytes,4,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
	Name     *string `protobuf:"bytes,5,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *ListFeedbackCategoryRequest) Reset() {
	*x = ListFeedbackCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackCategoryRequest) ProtoMessage() {}

func (x *ListFeedbackCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListFeedbackCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{0}
}

func (x *ListFeedbackCategoryRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFeedbackCategoryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFeedbackCategoryRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

func (x *ListFeedbackCategoryRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListFeedbackCategoryRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ListFeedbackCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListFeedbackCategoryReply_FeedbackCategory `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListFeedbackCategoryReply) Reset() {
	*x = ListFeedbackCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackCategoryReply) ProtoMessage() {}

func (x *ListFeedbackCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackCategoryReply.ProtoReflect.Descriptor instead.
func (*ListFeedbackCategoryReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{1}
}

func (x *ListFeedbackCategoryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFeedbackCategoryReply) GetList() []*ListFeedbackCategoryReply_FeedbackCategory {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateFeedbackCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateFeedbackCategoryRequest) Reset() {
	*x = CreateFeedbackCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedbackCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedbackCategoryRequest) ProtoMessage() {}

func (x *CreateFeedbackCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedbackCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedbackCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeedbackCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateFeedbackCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateFeedbackCategoryReply) Reset() {
	*x = CreateFeedbackCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedbackCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedbackCategoryReply) ProtoMessage() {}

func (x *CreateFeedbackCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedbackCategoryReply.ProtoReflect.Descriptor instead.
func (*CreateFeedbackCategoryReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFeedbackCategoryReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateFeedbackCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateFeedbackCategoryRequest) Reset() {
	*x = UpdateFeedbackCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedbackCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedbackCategoryRequest) ProtoMessage() {}

func (x *UpdateFeedbackCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedbackCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeedbackCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFeedbackCategoryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFeedbackCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateFeedbackCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeedbackCategoryReply) Reset() {
	*x = UpdateFeedbackCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedbackCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedbackCategoryReply) ProtoMessage() {}

func (x *UpdateFeedbackCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedbackCategoryReply.ProtoReflect.Descriptor instead.
func (*UpdateFeedbackCategoryReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{5}
}

type DeleteFeedbackCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedbackCategoryRequest) Reset() {
	*x = DeleteFeedbackCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedbackCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackCategoryRequest) ProtoMessage() {}

func (x *DeleteFeedbackCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFeedbackCategoryRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedbackCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFeedbackCategoryReply) Reset() {
	*x = DeleteFeedbackCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedbackCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackCategoryReply) ProtoMessage() {}

func (x *DeleteFeedbackCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackCategoryReply.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackCategoryReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{7}
}

type ListFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       uint32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   uint32  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Order      *string `protobuf:"bytes,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	OrderBy    *string `protobuf:"bytes,4,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
	AppId      *uint32 `protobuf:"varint,5,opt,name=appId,proto3,oneof" json:"appId,omitempty"`
	CategoryId *uint32 `protobuf:"varint,6,opt,name=categoryId,proto3,oneof" json:"categoryId,omitempty"`
	Status     *string `protobuf:"bytes,7,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Platform   *string `protobuf:"bytes,8,opt,name=platform,proto3,oneof" json:"platform,omitempty"`
}

func (x *ListFeedbackRequest) Reset() {
	*x = ListFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackRequest) ProtoMessage() {}

func (x *ListFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackRequest.ProtoReflect.Descriptor instead.
func (*ListFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{8}
}

func (x *ListFeedbackRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFeedbackRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFeedbackRequest) GetOrder() string {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return ""
}

func (x *ListFeedbackRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *ListFeedbackRequest) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *ListFeedbackRequest) GetCategoryId() uint32 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *ListFeedbackRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListFeedbackRequest) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

type ListFeedbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListFeedbackReply_Feedback `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListFeedbackReply) Reset() {
	*x = ListFeedbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackReply) ProtoMessage() {}

func (x *ListFeedbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackReply.ProtoReflect.Descriptor instead.
func (*ListFeedbackReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{9}
}

func (x *ListFeedbackReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFeedbackReply) GetList() []*ListFeedbackReply_Feedback {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      uint32  `protobuf:"varint,1,opt,name=appId,proto3" json:"appId,omitempty"`
	CategoryId uint32  `protobuf:"varint,2,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Title      string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content    string  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Images     *string `protobuf:"bytes,5,opt,name=images,proto3,oneof" json:"images,omitempty"`
	Contact    *string `protobuf:"bytes,6,opt,name=contact,proto3,oneof" json:"contact,omitempty"`
	Device     string  `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`
	Platform   string  `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	Version    string  `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateFeedbackRequest) Reset() {
	*x = CreateFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedbackRequest) ProtoMessage() {}

func (x *CreateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFeedbackRequest) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *CreateFeedbackRequest) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateFeedbackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateFeedbackRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateFeedbackRequest) GetImages() string {
	if x != nil && x.Images != nil {
		return *x.Images
	}
	return ""
}

func (x *CreateFeedbackRequest) GetContact() string {
	if x != nil && x.Contact != nil {
		return *x.Contact
	}
	return ""
}

func (x *CreateFeedbackRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *CreateFeedbackRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CreateFeedbackRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CreateFeedbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateFeedbackReply) Reset() {
	*x = CreateFeedbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFeedbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeedbackReply) ProtoMessage() {}

func (x *CreateFeedbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeedbackReply.ProtoReflect.Descriptor instead.
func (*CreateFeedbackReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFeedbackReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFeedbackRequest) Reset() {
	*x = DeleteFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackRequest) ProtoMessage() {}

func (x *DeleteFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFeedbackRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteFeedbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFeedbackReply) Reset() {
	*x = DeleteFeedbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFeedbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeedbackReply) ProtoMessage() {}

func (x *DeleteFeedbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeedbackReply.ProtoReflect.Descriptor instead.
func (*DeleteFeedbackReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{13}
}

type UpdateFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status          string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ProcessedResult *string `protobuf:"bytes,3,opt,name=processedResult,proto3,oneof" json:"processedResult,omitempty"`
}

func (x *UpdateFeedbackRequest) Reset() {
	*x = UpdateFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedbackRequest) ProtoMessage() {}

func (x *UpdateFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedbackRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFeedbackRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFeedbackRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateFeedbackRequest) GetProcessedResult() string {
	if x != nil && x.ProcessedResult != nil {
		return *x.ProcessedResult
	}
	return ""
}

type UpdateFeedbackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFeedbackReply) Reset() {
	*x = UpdateFeedbackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFeedbackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeedbackReply) ProtoMessage() {}

func (x *UpdateFeedbackReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeedbackReply.ProtoReflect.Descriptor instead.
func (*UpdateFeedbackReply) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{15}
}

type ListFeedbackCategoryReply_FeedbackCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt uint32 `protobuf:"varint,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *ListFeedbackCategoryReply_FeedbackCategory) Reset() {
	*x = ListFeedbackCategoryReply_FeedbackCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackCategoryReply_FeedbackCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackCategoryReply_FeedbackCategory) ProtoMessage() {}

func (x *ListFeedbackCategoryReply_FeedbackCategory) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackCategoryReply_FeedbackCategory.ProtoReflect.Descriptor instead.
func (*ListFeedbackCategoryReply_FeedbackCategory) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListFeedbackCategoryReply_FeedbackCategory) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFeedbackCategoryReply_FeedbackCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListFeedbackCategoryReply_FeedbackCategory) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ListFeedbackReply_Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId           uint32                               `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	UserId          uint32                               `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	CategoryId      uint32                               `protobuf:"varint,4,opt,name=categoryId,proto3" json:"categoryId,omitempty"`
	Title           string                               `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Content         string                               `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Status          string                               `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Images          *string                              `protobuf:"bytes,8,opt,name=images,proto3,oneof" json:"images,omitempty"`
	Contact         *string                              `protobuf:"bytes,9,opt,name=contact,proto3,oneof" json:"contact,omitempty"`
	Device          string                               `protobuf:"bytes,10,opt,name=device,proto3" json:"device,omitempty"`
	Platform        string                               `protobuf:"bytes,11,opt,name=platform,proto3" json:"platform,omitempty"`
	Version         string                               `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	ProcessedBy     *uint32                              `protobuf:"varint,13,opt,name=processedBy,proto3,oneof" json:"processedBy,omitempty"`
	ProcessedResult *string                              `protobuf:"bytes,14,opt,name=processedResult,proto3,oneof" json:"processedResult,omitempty"`
	CreatedAt       uint32                               `protobuf:"varint,15,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt       uint32                               `protobuf:"varint,16,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	App             *ListFeedbackReply_Feedback_App      `protobuf:"bytes,17,opt,name=app,proto3,oneof" json:"app,omitempty"`
	User            *ListFeedbackReply_Feedback_User     `protobuf:"bytes,18,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Category        *ListFeedbackReply_Feedback_Category `protobuf:"bytes,19,opt,name=category,proto3,oneof" json:"category,omitempty"`
	ImageUrls       []string                             `protobuf:"bytes,20,rep,name=imageUrls,proto3" json:"imageUrls,omitempty"`
}

func (x *ListFeedbackReply_Feedback) Reset() {
	*x = ListFeedbackReply_Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackReply_Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackReply_Feedback) ProtoMessage() {}

func (x *ListFeedbackReply_Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackReply_Feedback.ProtoReflect.Descriptor instead.
func (*ListFeedbackReply_Feedback) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ListFeedbackReply_Feedback) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetCategoryId() uint32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetImages() string {
	if x != nil && x.Images != nil {
		return *x.Images
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetContact() string {
	if x != nil && x.Contact != nil {
		return *x.Contact
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetProcessedBy() uint32 {
	if x != nil && x.ProcessedBy != nil {
		return *x.ProcessedBy
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetProcessedResult() string {
	if x != nil && x.ProcessedResult != nil {
		return *x.ProcessedResult
	}
	return ""
}

func (x *ListFeedbackReply_Feedback) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListFeedbackReply_Feedback) GetApp() *ListFeedbackReply_Feedback_App {
	if x != nil {
		return x.App
	}
	return nil
}

func (x *ListFeedbackReply_Feedback) GetUser() *ListFeedbackReply_Feedback_User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ListFeedbackReply_Feedback) GetCategory() *ListFeedbackReply_Feedback_Category {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *ListFeedbackReply_Feedback) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

type ListFeedbackReply_Feedback_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListFeedbackReply_Feedback_App) Reset() {
	*x = ListFeedbackReply_Feedback_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackReply_Feedback_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackReply_Feedback_App) ProtoMessage() {}

func (x *ListFeedbackReply_Feedback_App) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackReply_Feedback_App.ProtoReflect.Descriptor instead.
func (*ListFeedbackReply_Feedback_App) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{9, 0, 0}
}

func (x *ListFeedbackReply_Feedback_App) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFeedbackReply_Feedback_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListFeedbackReply_Feedback_User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RealName string `protobuf:"bytes,2,opt,name=realName,proto3" json:"realName,omitempty"`
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *ListFeedbackReply_Feedback_User) Reset() {
	*x = ListFeedbackReply_Feedback_User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackReply_Feedback_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackReply_Feedback_User) ProtoMessage() {}

func (x *ListFeedbackReply_Feedback_User) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackReply_Feedback_User.ProtoReflect.Descriptor instead.
func (*ListFeedbackReply_Feedback_User) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{9, 0, 1}
}

func (x *ListFeedbackReply_Feedback_User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFeedbackReply_Feedback_User) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ListFeedbackReply_Feedback_User) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type ListFeedbackReply_Feedback_Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListFeedbackReply_Feedback_Category) Reset() {
	*x = ListFeedbackReply_Feedback_Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_feedback_proto_feedback_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeedbackReply_Feedback_Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeedbackReply_Feedback_Category) ProtoMessage() {}

func (x *ListFeedbackReply_Feedback_Category) ProtoReflect() protoreflect.Message {
	mi := &file_api_feedback_proto_feedback_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeedbackReply_Feedback_Category.ProtoReflect.Descriptor instead.
func (*ListFeedbackReply_Feedback_Category) Descriptor() ([]byte, []int) {
	return file_api_feedback_proto_feedback_proto_rawDescGZIP(), []int{9, 0, 2}
}

func (x *ListFeedbackReply_Feedback_Category) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListFeedbackReply_Feedback_Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_feedback_proto_feedback_proto protoreflect.FileDescriptor

var file_api_feedback_proto_feedback_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x72, 0x0b, 0x52, 0x03, 0x61, 0x73,
	0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x52, 0x02, 0x69, 0x64, 0x48,
	0x01, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x54, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a,
	0x54, 0x0a, 0x10, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3c, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x55, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x38, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x81, 0x03, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18,
	0x32, 0x28, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42,
	0x0d, 0x72, 0x0b, 0x52, 0x03, 0x61, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x48, 0x00,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x15, 0xfa, 0x42, 0x12,
	0x72, 0x10, 0x52, 0x02, 0x69, 0x64, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x02, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x88, 0x01, 0x01, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x70, 0x70, 0x49, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xd9, 0x08, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x44, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xe7, 0x07, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x41, 0x70, 0x70, 0x48, 0x04, 0x52, 0x03, 0x61, 0x70, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x48, 0x06, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x18, 0x14, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x1a, 0x29, 0x0a,
	0x03, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x4e, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2e, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x79, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0xdd, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x28, 0x01, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42,
	0x24, 0x0a, 0x14, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x01, 0x5a, 0x0a, 0x2e, 0x3b, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_feedback_proto_feedback_proto_rawDescOnce sync.Once
	file_api_feedback_proto_feedback_proto_rawDescData = file_api_feedback_proto_feedback_proto_rawDesc
)

func file_api_feedback_proto_feedback_proto_rawDescGZIP() []byte {
	file_api_feedback_proto_feedback_proto_rawDescOnce.Do(func() {
		file_api_feedback_proto_feedback_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_feedback_proto_feedback_proto_rawDescData)
	})
	return file_api_feedback_proto_feedback_proto_rawDescData
}

var (
	file_api_feedback_proto_feedback_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
	file_api_feedback_proto_feedback_proto_goTypes  = []interface{}{
		(*ListFeedbackCategoryRequest)(nil),                // 0: manager.api.feedback.ListFeedbackCategoryRequest
		(*ListFeedbackCategoryReply)(nil),                  // 1: manager.api.feedback.ListFeedbackCategoryReply
		(*CreateFeedbackCategoryRequest)(nil),              // 2: manager.api.feedback.CreateFeedbackCategoryRequest
		(*CreateFeedbackCategoryReply)(nil),                // 3: manager.api.feedback.CreateFeedbackCategoryReply
		(*UpdateFeedbackCategoryRequest)(nil),              // 4: manager.api.feedback.UpdateFeedbackCategoryRequest
		(*UpdateFeedbackCategoryReply)(nil),                // 5: manager.api.feedback.UpdateFeedbackCategoryReply
		(*DeleteFeedbackCategoryRequest)(nil),              // 6: manager.api.feedback.DeleteFeedbackCategoryRequest
		(*DeleteFeedbackCategoryReply)(nil),                // 7: manager.api.feedback.DeleteFeedbackCategoryReply
		(*ListFeedbackRequest)(nil),                        // 8: manager.api.feedback.ListFeedbackRequest
		(*ListFeedbackReply)(nil),                          // 9: manager.api.feedback.ListFeedbackReply
		(*CreateFeedbackRequest)(nil),                      // 10: manager.api.feedback.CreateFeedbackRequest
		(*CreateFeedbackReply)(nil),                        // 11: manager.api.feedback.CreateFeedbackReply
		(*DeleteFeedbackRequest)(nil),                      // 12: manager.api.feedback.DeleteFeedbackRequest
		(*DeleteFeedbackReply)(nil),                        // 13: manager.api.feedback.DeleteFeedbackReply
		(*UpdateFeedbackRequest)(nil),                      // 14: manager.api.feedback.UpdateFeedbackRequest
		(*UpdateFeedbackReply)(nil),                        // 15: manager.api.feedback.UpdateFeedbackReply
		(*ListFeedbackCategoryReply_FeedbackCategory)(nil), // 16: manager.api.feedback.ListFeedbackCategoryReply.FeedbackCategory
		(*ListFeedbackReply_Feedback)(nil),                 // 17: manager.api.feedback.ListFeedbackReply.Feedback
		(*ListFeedbackReply_Feedback_App)(nil),             // 18: manager.api.feedback.ListFeedbackReply.Feedback.App
		(*ListFeedbackReply_Feedback_User)(nil),            // 19: manager.api.feedback.ListFeedbackReply.Feedback.User
		(*ListFeedbackReply_Feedback_Category)(nil),        // 20: manager.api.feedback.ListFeedbackReply.Feedback.Category
	}
)

var file_api_feedback_proto_feedback_proto_depIdxs = []int32{
	16, // 0: manager.api.feedback.ListFeedbackCategoryReply.list:type_name -> manager.api.feedback.ListFeedbackCategoryReply.FeedbackCategory
	17, // 1: manager.api.feedback.ListFeedbackReply.list:type_name -> manager.api.feedback.ListFeedbackReply.Feedback
	18, // 2: manager.api.feedback.ListFeedbackReply.Feedback.app:type_name -> manager.api.feedback.ListFeedbackReply.Feedback.App
	19, // 3: manager.api.feedback.ListFeedbackReply.Feedback.user:type_name -> manager.api.feedback.ListFeedbackReply.Feedback.User
	20, // 4: manager.api.feedback.ListFeedbackReply.Feedback.category:type_name -> manager.api.feedback.ListFeedbackReply.Feedback.Category
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_feedback_proto_feedback_proto_init() }
func file_api_feedback_proto_feedback_proto_init() {
	if File_api_feedback_proto_feedback_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_feedback_proto_feedback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedbackCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedbackCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedbackCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedbackCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedbackCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedbackCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFeedbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFeedbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFeedbackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackCategoryReply_FeedbackCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackReply_Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackReply_Feedback_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackReply_Feedback_User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_feedback_proto_feedback_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeedbackReply_Feedback_Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_feedback_proto_feedback_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_feedback_proto_feedback_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_api_feedback_proto_feedback_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_api_feedback_proto_feedback_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_api_feedback_proto_feedback_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_feedback_proto_feedback_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_feedback_proto_feedback_proto_goTypes,
		DependencyIndexes: file_api_feedback_proto_feedback_proto_depIdxs,
		MessageInfos:      file_api_feedback_proto_feedback_proto_msgTypes,
	}.Build()
	File_api_feedback_proto_feedback_proto = out.File
	file_api_feedback_proto_feedback_proto_rawDesc = nil
	file_api_feedback_proto_feedback_proto_goTypes = nil
	file_api_feedback_proto_feedback_proto_depIdxs = nil
}
