# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Role API
    version: 0.0.1
paths:
    /manager/api/v1/role:
        get:
            tags:
                - Role
            description: GetRole 获取指定的角色信息
            operationId: Role_GetRole
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - Role
            description: UpdateRole 更新角色信息
            operationId: Role_UpdateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - Role
            description: CreateRole 创建角色信息
            operationId: Role_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - Role
            description: DeleteRole 删除角色信息
            operationId: Role_DeleteRole
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/role/menu:
        put:
            tags:
                - Role
            description: UpdateRole 更新角色信息
            operationId: Role_UpdateRoleMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleMenuRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleMenuReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/role/menu_ids:
        get:
            tags:
                - Role
            description: GetRoleMenuIds 获取指定角色的菜单id列表
            operationId: Role_GetRoleMenuIds
            parameters:
                - name: roleId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleMenuIdsReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/role/status:
        put:
            tags:
                - Role
            description: UpdateRoleStatus 更新角色信息状态
            operationId: Role_UpdateRoleStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleStatusReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/roles:
        get:
            tags:
                - Role
            description: ListRole 获取角色信息列表
            operationId: Role_ListRole
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
                - name: keyword
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRoleReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateRoleReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateRoleRequest:
            type: object
            properties:
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                status:
                    type: boolean
                dataScope:
                    type: string
                departmentIds:
                    type: string
                description:
                    type: string
        DeleteRoleReply:
            type: object
            properties: {}
        GetRoleMenuIdsReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        type: integer
                        format: uint32
        GetRoleReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                status:
                    type: boolean
                dataScope:
                    type: string
                departmentIds:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListRoleReply:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListRoleReply_Role'
        ListRoleReply_Role:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                keyword:
                    type: string
                status:
                    type: boolean
                dataScope:
                    type: string
                departmentIds:
                    type: string
                description:
                    type: string
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListRoleReply_Role'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateRoleMenuReply:
            type: object
            properties: {}
        UpdateRoleMenuRequest:
            type: object
            properties:
                roleId:
                    type: integer
                    format: uint32
                menuIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        UpdateRoleReply:
            type: object
            properties: {}
        UpdateRoleRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                parentId:
                    type: integer
                    format: uint32
                name:
                    type: string
                dataScope:
                    type: string
                departmentIds:
                    type: string
                description:
                    type: string
        UpdateRoleStatusReply:
            type: object
            properties: {}
        UpdateRoleStatusRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                status:
                    type: boolean
tags:
    - name: Role
