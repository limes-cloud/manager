// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: api/manager/menu/manager_menu.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *string `protobuf:"bytes,3,opt,name=title,proto3,oneof" json:"title,omitempty"`
}

func (x *ListMenuRequest) Reset() {
	*x = ListMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuRequest) ProtoMessage() {}

func (x *ListMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuRequest.ProtoReflect.Descriptor instead.
func (*ListMenuRequest) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{0}
}

func (x *ListMenuRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type ListMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ListMenuReply_Menu `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMenuReply) Reset() {
	*x = ListMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuReply) ProtoMessage() {}

func (x *ListMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuReply.ProtoReflect.Descriptor instead.
func (*ListMenuReply) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{1}
}

func (x *ListMenuReply) GetList() []*ListMenuReply_Menu {
	if x != nil {
		return x.List
	}
	return nil
}

type ListMenuByCurRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMenuByCurRoleRequest) Reset() {
	*x = ListMenuByCurRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuByCurRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuByCurRoleRequest) ProtoMessage() {}

func (x *ListMenuByCurRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuByCurRoleRequest.ProtoReflect.Descriptor instead.
func (*ListMenuByCurRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{2}
}

type ListMenuByCurRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32                         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*ListMenuByCurRoleReply_Menu `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListMenuByCurRoleReply) Reset() {
	*x = ListMenuByCurRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuByCurRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuByCurRoleReply) ProtoMessage() {}

func (x *ListMenuByCurRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuByCurRoleReply.ProtoReflect.Descriptor instead.
func (*ListMenuByCurRoleReply) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{3}
}

func (x *ListMenuByCurRoleReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMenuByCurRoleReply) GetList() []*ListMenuByCurRoleReply_Menu {
	if x != nil {
		return x.List
	}
	return nil
}

type CreateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentId   uint32  `protobuf:"varint,1,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Title      string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type       string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Keyword    *string `protobuf:"bytes,4,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Icon       *string `protobuf:"bytes,5,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Api        *string `protobuf:"bytes,6,opt,name=api,proto3,oneof" json:"api,omitempty"`
	Method     *string `protobuf:"bytes,7,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Path       *string `protobuf:"bytes,8,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Permission *string `protobuf:"bytes,9,opt,name=permission,proto3,oneof" json:"permission,omitempty"`
	Component  *string `protobuf:"bytes,10,opt,name=component,proto3,oneof" json:"component,omitempty"`
	Redirect   *string `protobuf:"bytes,11,opt,name=redirect,proto3,oneof" json:"redirect,omitempty"`
	Weight     *int32  `protobuf:"varint,12,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	IsHidden   *bool   `protobuf:"varint,13,opt,name=isHidden,proto3,oneof" json:"isHidden,omitempty"`
	IsCache    *bool   `protobuf:"varint,14,opt,name=isCache,proto3,oneof" json:"isCache,omitempty"`
	IsHome     *bool   `protobuf:"varint,15,opt,name=isHome,proto3,oneof" json:"isHome,omitempty"`
	IsAffix    *bool   `protobuf:"varint,16,opt,name=isAffix,proto3,oneof" json:"isAffix,omitempty"`
}

func (x *CreateMenuRequest) Reset() {
	*x = CreateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuRequest) ProtoMessage() {}

func (x *CreateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuRequest) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMenuRequest) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateMenuRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMenuRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateMenuRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *CreateMenuRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *CreateMenuRequest) GetApi() string {
	if x != nil && x.Api != nil {
		return *x.Api
	}
	return ""
}

func (x *CreateMenuRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *CreateMenuRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CreateMenuRequest) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *CreateMenuRequest) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *CreateMenuRequest) GetRedirect() string {
	if x != nil && x.Redirect != nil {
		return *x.Redirect
	}
	return ""
}

func (x *CreateMenuRequest) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *CreateMenuRequest) GetIsHidden() bool {
	if x != nil && x.IsHidden != nil {
		return *x.IsHidden
	}
	return false
}

func (x *CreateMenuRequest) GetIsCache() bool {
	if x != nil && x.IsCache != nil {
		return *x.IsCache
	}
	return false
}

func (x *CreateMenuRequest) GetIsHome() bool {
	if x != nil && x.IsHome != nil {
		return *x.IsHome
	}
	return false
}

func (x *CreateMenuRequest) GetIsAffix() bool {
	if x != nil && x.IsAffix != nil {
		return *x.IsAffix
	}
	return false
}

type CreateMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateMenuReply) Reset() {
	*x = CreateMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuReply) ProtoMessage() {}

func (x *CreateMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuReply.ProtoReflect.Descriptor instead.
func (*CreateMenuReply) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMenuReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId   uint32  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Title      string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type       string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Keyword    *string `protobuf:"bytes,5,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Icon       *string `protobuf:"bytes,6,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Api        *string `protobuf:"bytes,7,opt,name=api,proto3,oneof" json:"api,omitempty"`
	Method     *string `protobuf:"bytes,8,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Path       *string `protobuf:"bytes,9,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Permission *string `protobuf:"bytes,10,opt,name=permission,proto3,oneof" json:"permission,omitempty"`
	Component  *string `protobuf:"bytes,11,opt,name=component,proto3,oneof" json:"component,omitempty"`
	Redirect   *string `protobuf:"bytes,12,opt,name=redirect,proto3,oneof" json:"redirect,omitempty"`
	Weight     *int32  `protobuf:"varint,13,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	IsHidden   *bool   `protobuf:"varint,14,opt,name=isHidden,proto3,oneof" json:"isHidden,omitempty"`
	IsCache    *bool   `protobuf:"varint,15,opt,name=isCache,proto3,oneof" json:"isCache,omitempty"`
	IsHome     *bool   `protobuf:"varint,16,opt,name=isHome,proto3,oneof" json:"isHome,omitempty"`
	IsAffix    *bool   `protobuf:"varint,17,opt,name=isAffix,proto3,oneof" json:"isAffix,omitempty"`
}

func (x *UpdateMenuRequest) Reset() {
	*x = UpdateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuRequest) ProtoMessage() {}

func (x *UpdateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuRequest.ProtoReflect.Descriptor instead.
func (*UpdateMenuRequest) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMenuRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMenuRequest) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateMenuRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMenuRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateMenuRequest) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *UpdateMenuRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateMenuRequest) GetApi() string {
	if x != nil && x.Api != nil {
		return *x.Api
	}
	return ""
}

func (x *UpdateMenuRequest) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *UpdateMenuRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *UpdateMenuRequest) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *UpdateMenuRequest) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *UpdateMenuRequest) GetRedirect() string {
	if x != nil && x.Redirect != nil {
		return *x.Redirect
	}
	return ""
}

func (x *UpdateMenuRequest) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *UpdateMenuRequest) GetIsHidden() bool {
	if x != nil && x.IsHidden != nil {
		return *x.IsHidden
	}
	return false
}

func (x *UpdateMenuRequest) GetIsCache() bool {
	if x != nil && x.IsCache != nil {
		return *x.IsCache
	}
	return false
}

func (x *UpdateMenuRequest) GetIsHome() bool {
	if x != nil && x.IsHome != nil {
		return *x.IsHome
	}
	return false
}

func (x *UpdateMenuRequest) GetIsAffix() bool {
	if x != nil && x.IsAffix != nil {
		return *x.IsAffix
	}
	return false
}

type UpdateMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMenuReply) Reset() {
	*x = UpdateMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMenuReply) ProtoMessage() {}

func (x *UpdateMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMenuReply.ProtoReflect.Descriptor instead.
func (*UpdateMenuReply) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{7}
}

type DeleteMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMenuRequest) Reset() {
	*x = DeleteMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuRequest) ProtoMessage() {}

func (x *DeleteMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuRequest) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMenuRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMenuReply) Reset() {
	*x = DeleteMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuReply) ProtoMessage() {}

func (x *DeleteMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuReply.ProtoReflect.Descriptor instead.
func (*DeleteMenuReply) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{9}
}

type ListMenuReply_Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId   uint32                `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Title      string                `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type       string                `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Keyword    *string               `protobuf:"bytes,5,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Icon       *string               `protobuf:"bytes,6,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Api        *string               `protobuf:"bytes,7,opt,name=api,proto3,oneof" json:"api,omitempty"`
	Method     *string               `protobuf:"bytes,8,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Path       *string               `protobuf:"bytes,9,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Permission *string               `protobuf:"bytes,10,opt,name=permission,proto3,oneof" json:"permission,omitempty"`
	Component  *string               `protobuf:"bytes,11,opt,name=component,proto3,oneof" json:"component,omitempty"`
	Redirect   *string               `protobuf:"bytes,12,opt,name=redirect,proto3,oneof" json:"redirect,omitempty"`
	Weight     *int32                `protobuf:"varint,13,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	IsHidden   *bool                 `protobuf:"varint,14,opt,name=isHidden,proto3,oneof" json:"isHidden,omitempty"`
	IsCache    *bool                 `protobuf:"varint,15,opt,name=isCache,proto3,oneof" json:"isCache,omitempty"`
	IsHome     *bool                 `protobuf:"varint,16,opt,name=isHome,proto3,oneof" json:"isHome,omitempty"`
	IsAffix    *bool                 `protobuf:"varint,17,opt,name=isAffix,proto3,oneof" json:"isAffix,omitempty"`
	CreatedAt  uint32                `protobuf:"varint,18,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  uint32                `protobuf:"varint,19,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Children   []*ListMenuReply_Menu `protobuf:"bytes,20,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ListMenuReply_Menu) Reset() {
	*x = ListMenuReply_Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuReply_Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuReply_Menu) ProtoMessage() {}

func (x *ListMenuReply_Menu) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuReply_Menu.ProtoReflect.Descriptor instead.
func (*ListMenuReply_Menu) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListMenuReply_Menu) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMenuReply_Menu) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ListMenuReply_Menu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListMenuReply_Menu) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListMenuReply_Menu) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListMenuReply_Menu) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *ListMenuReply_Menu) GetApi() string {
	if x != nil && x.Api != nil {
		return *x.Api
	}
	return ""
}

func (x *ListMenuReply_Menu) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *ListMenuReply_Menu) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *ListMenuReply_Menu) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *ListMenuReply_Menu) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *ListMenuReply_Menu) GetRedirect() string {
	if x != nil && x.Redirect != nil {
		return *x.Redirect
	}
	return ""
}

func (x *ListMenuReply_Menu) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *ListMenuReply_Menu) GetIsHidden() bool {
	if x != nil && x.IsHidden != nil {
		return *x.IsHidden
	}
	return false
}

func (x *ListMenuReply_Menu) GetIsCache() bool {
	if x != nil && x.IsCache != nil {
		return *x.IsCache
	}
	return false
}

func (x *ListMenuReply_Menu) GetIsHome() bool {
	if x != nil && x.IsHome != nil {
		return *x.IsHome
	}
	return false
}

func (x *ListMenuReply_Menu) GetIsAffix() bool {
	if x != nil && x.IsAffix != nil {
		return *x.IsAffix
	}
	return false
}

func (x *ListMenuReply_Menu) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListMenuReply_Menu) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListMenuReply_Menu) GetChildren() []*ListMenuReply_Menu {
	if x != nil {
		return x.Children
	}
	return nil
}

type ListMenuByCurRoleReply_Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId   uint32                         `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Title      string                         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Type       string                         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Keyword    *string                        `protobuf:"bytes,5,opt,name=keyword,proto3,oneof" json:"keyword,omitempty"`
	Icon       *string                        `protobuf:"bytes,6,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Api        *string                        `protobuf:"bytes,7,opt,name=api,proto3,oneof" json:"api,omitempty"`
	Method     *string                        `protobuf:"bytes,8,opt,name=method,proto3,oneof" json:"method,omitempty"`
	Path       *string                        `protobuf:"bytes,9,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Permission *string                        `protobuf:"bytes,10,opt,name=permission,proto3,oneof" json:"permission,omitempty"`
	Component  *string                        `protobuf:"bytes,11,opt,name=component,proto3,oneof" json:"component,omitempty"`
	Redirect   *string                        `protobuf:"bytes,12,opt,name=redirect,proto3,oneof" json:"redirect,omitempty"`
	Weight     *int32                         `protobuf:"varint,13,opt,name=weight,proto3,oneof" json:"weight,omitempty"`
	IsHidden   *bool                          `protobuf:"varint,14,opt,name=isHidden,proto3,oneof" json:"isHidden,omitempty"`
	IsCache    *bool                          `protobuf:"varint,15,opt,name=isCache,proto3,oneof" json:"isCache,omitempty"`
	IsHome     *bool                          `protobuf:"varint,16,opt,name=isHome,proto3,oneof" json:"isHome,omitempty"`
	IsAffix    *bool                          `protobuf:"varint,17,opt,name=isAffix,proto3,oneof" json:"isAffix,omitempty"`
	CreatedAt  uint32                         `protobuf:"varint,18,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt  uint32                         `protobuf:"varint,19,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Children   []*ListMenuByCurRoleReply_Menu `protobuf:"bytes,20,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ListMenuByCurRoleReply_Menu) Reset() {
	*x = ListMenuByCurRoleReply_Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_manager_menu_manager_menu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMenuByCurRoleReply_Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMenuByCurRoleReply_Menu) ProtoMessage() {}

func (x *ListMenuByCurRoleReply_Menu) ProtoReflect() protoreflect.Message {
	mi := &file_api_manager_menu_manager_menu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMenuByCurRoleReply_Menu.ProtoReflect.Descriptor instead.
func (*ListMenuByCurRoleReply_Menu) Descriptor() ([]byte, []int) {
	return file_api_manager_menu_manager_menu_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ListMenuByCurRoleReply_Menu) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMenuByCurRoleReply_Menu) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ListMenuByCurRoleReply_Menu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetKeyword() string {
	if x != nil && x.Keyword != nil {
		return *x.Keyword
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetApi() string {
	if x != nil && x.Api != nil {
		return *x.Api
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetPermission() string {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetRedirect() string {
	if x != nil && x.Redirect != nil {
		return *x.Redirect
	}
	return ""
}

func (x *ListMenuByCurRoleReply_Menu) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

func (x *ListMenuByCurRoleReply_Menu) GetIsHidden() bool {
	if x != nil && x.IsHidden != nil {
		return *x.IsHidden
	}
	return false
}

func (x *ListMenuByCurRoleReply_Menu) GetIsCache() bool {
	if x != nil && x.IsCache != nil {
		return *x.IsCache
	}
	return false
}

func (x *ListMenuByCurRoleReply_Menu) GetIsHome() bool {
	if x != nil && x.IsHome != nil {
		return *x.IsHome
	}
	return false
}

func (x *ListMenuByCurRoleReply_Menu) GetIsAffix() bool {
	if x != nil && x.IsAffix != nil {
		return *x.IsAffix
	}
	return false
}

func (x *ListMenuByCurRoleReply_Menu) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ListMenuByCurRoleReply_Menu) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ListMenuByCurRoleReply_Menu) GetChildren() []*ListMenuByCurRoleReply_Menu {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_api_manager_menu_manager_menu_proto protoreflect.FileDescriptor

var file_api_manager_menu_manager_menu_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6d, 0x65,
	0x6e, 0x75, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0xd9, 0x06, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x82, 0x06, 0x0a, 0x04, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4b, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x61, 0x70, 0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x22,
	0x1a, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x43, 0x75, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8a, 0x07, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x43, 0x75, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4c, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x42, 0x79, 0x43, 0x75, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x8b, 0x06, 0x0a, 0x04, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x03, 0x61, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x54, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x79, 0x43, 0x75, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70, 0x69, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x22, 0x88, 0x05, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x61,
	0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0b, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x0c, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63,
	0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70, 0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x41, 0x66,
	0x66, 0x69, 0x78, 0x22, 0x21, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa1, 0x05, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x61, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x03, 0x61, 0x70, 0x69, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x73, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09, 0x52, 0x08, 0x69, 0x73,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x07, 0x69, 0x73,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x69, 0x73, 0x48, 0x6f,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0b, 0x52, 0x06, 0x69, 0x73, 0x48, 0x6f,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x07, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69,
	0x78, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x70,
	0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69,
	0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x69, 0x73, 0x41, 0x66, 0x66, 0x69, 0x78, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x30,
	0x0a, 0x1b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x42, 0x06, 0x4d,
	0x65, 0x6e, 0x75, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_manager_menu_manager_menu_proto_rawDescOnce sync.Once
	file_api_manager_menu_manager_menu_proto_rawDescData = file_api_manager_menu_manager_menu_proto_rawDesc
)

func file_api_manager_menu_manager_menu_proto_rawDescGZIP() []byte {
	file_api_manager_menu_manager_menu_proto_rawDescOnce.Do(func() {
		file_api_manager_menu_manager_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_manager_menu_manager_menu_proto_rawDescData)
	})
	return file_api_manager_menu_manager_menu_proto_rawDescData
}

var file_api_manager_menu_manager_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_manager_menu_manager_menu_proto_goTypes = []interface{}{
	(*ListMenuRequest)(nil),             // 0: manager.api.manager.menu.v1.ListMenuRequest
	(*ListMenuReply)(nil),               // 1: manager.api.manager.menu.v1.ListMenuReply
	(*ListMenuByCurRoleRequest)(nil),    // 2: manager.api.manager.menu.v1.ListMenuByCurRoleRequest
	(*ListMenuByCurRoleReply)(nil),      // 3: manager.api.manager.menu.v1.ListMenuByCurRoleReply
	(*CreateMenuRequest)(nil),           // 4: manager.api.manager.menu.v1.CreateMenuRequest
	(*CreateMenuReply)(nil),             // 5: manager.api.manager.menu.v1.CreateMenuReply
	(*UpdateMenuRequest)(nil),           // 6: manager.api.manager.menu.v1.UpdateMenuRequest
	(*UpdateMenuReply)(nil),             // 7: manager.api.manager.menu.v1.UpdateMenuReply
	(*DeleteMenuRequest)(nil),           // 8: manager.api.manager.menu.v1.DeleteMenuRequest
	(*DeleteMenuReply)(nil),             // 9: manager.api.manager.menu.v1.DeleteMenuReply
	(*ListMenuReply_Menu)(nil),          // 10: manager.api.manager.menu.v1.ListMenuReply.Menu
	(*ListMenuByCurRoleReply_Menu)(nil), // 11: manager.api.manager.menu.v1.ListMenuByCurRoleReply.Menu
}
var file_api_manager_menu_manager_menu_proto_depIdxs = []int32{
	10, // 0: manager.api.manager.menu.v1.ListMenuReply.list:type_name -> manager.api.manager.menu.v1.ListMenuReply.Menu
	11, // 1: manager.api.manager.menu.v1.ListMenuByCurRoleReply.list:type_name -> manager.api.manager.menu.v1.ListMenuByCurRoleReply.Menu
	10, // 2: manager.api.manager.menu.v1.ListMenuReply.Menu.children:type_name -> manager.api.manager.menu.v1.ListMenuReply.Menu
	11, // 3: manager.api.manager.menu.v1.ListMenuByCurRoleReply.Menu.children:type_name -> manager.api.manager.menu.v1.ListMenuByCurRoleReply.Menu
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_manager_menu_manager_menu_proto_init() }
func file_api_manager_menu_manager_menu_proto_init() {
	if File_api_manager_menu_manager_menu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_manager_menu_manager_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuByCurRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuByCurRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuReply_Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_manager_menu_manager_menu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMenuByCurRoleReply_Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_manager_menu_manager_menu_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_manager_menu_manager_menu_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_api_manager_menu_manager_menu_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_api_manager_menu_manager_menu_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_api_manager_menu_manager_menu_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_manager_menu_manager_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_manager_menu_manager_menu_proto_goTypes,
		DependencyIndexes: file_api_manager_menu_manager_menu_proto_depIdxs,
		MessageInfos:      file_api_manager_menu_manager_menu_proto_msgTypes,
	}.Build()
	File_api_manager_menu_manager_menu_proto = out.File
	file_api_manager_menu_manager_menu_proto_rawDesc = nil
	file_api_manager_menu_manager_menu_proto_goTypes = nil
	file_api_manager_menu_manager_menu_proto_depIdxs = nil
}
