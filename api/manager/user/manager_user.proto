syntax = "proto3";

package manager.api.manager.user.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "manager.api.manager.user.v1";
option java_outer_classname = "UserV1";

import "validate/validate.proto";

message GetUserRequest {
  optional uint32 id = 1[(validate.rules).uint32 = {gte: 1}];
  optional string phone = 2[(validate.rules).string = {min_len: 1}];
  optional string email = 3[(validate.rules).string = {min_len: 1}];
}

message Role {
  uint32 id = 1;
  string name = 2;
  string keyword = 3;
}
message Job {
  uint32 id = 1;
  string name = 2;
  string keyword = 3;
}
message Department {
  uint32 id = 1;
  string name = 2;
  string keyword = 3;
}

message GetUserReply {
  uint32 id = 1;
  string name = 4;
  string nickname = 5;
  string gender = 6;
  optional string avatar = 7;
  string phone = 8;
  string email = 9;
  optional bool status = 10;
  optional string setting = 11;
  uint32 loggedAt = 12;
  uint32 createdAt = 13;
  uint32 updatedAt = 14;
  repeated Role roles = 15;
  repeated Job jobs = 16;
  repeated Department departments = 17;
}

message ListUserRequest {
  uint32 page = 1[(validate.rules).uint32 = {gte: 1}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gte: 1,lte:50}];
  optional uint32 departmentId = 3;
  optional uint32 roleId = 4;
  optional string name = 5;
  optional string phone = 6;
  optional string email = 7;
  optional bool status = 8;
  repeated int64 loggedAts = 9;
  repeated int64 createdAts = 10;
}

message ListUserReply { // fixed code
  uint32 total = 1;
  repeated GetUserReply list = 2;
}

message CreateUserRequest { // fixed code
  string name = 2[(validate.rules).string = {min_len: 1}];
  string gender = 3[(validate.rules).string = {min_len: 1}];
  string phone = 4[(validate.rules).string = {min_len: 1}];
  string email = 5[(validate.rules).string = {min_len: 1}];
  repeated uint32 departmentIds = 1[(validate.rules).repeated = {min_items: 1,unique: true}];
  repeated uint32 jobIds = 6;
  repeated uint32 roleIds = 7;
}

message CreateUserReply {
  uint32 id = 1;
}

message UpdateUserRequest { // fixed code
  uint32 id = 1[(validate.rules).uint32 = {gte: 1}];
  string name = 3[(validate.rules).string = {min_len: 1}];
  string gender = 4[(validate.rules).string = {min_len: 1}];
  string phone = 5[(validate.rules).string = {min_len: 1}];
  string email = 6[(validate.rules).string = {min_len: 1}];
  repeated uint32 departmentIds = 9[(validate.rules).repeated = {min_items: 1,unique: true}];
  repeated uint32 jobIds = 7;
  repeated uint32 roleIds = 8;
}

message UpdateUserReply {
}

message UpdateUserStatusRequest {
  uint32 id = 1[(validate.rules).uint32 = {gte: 1}];
  bool status = 2;
}

message UpdateUserStatusReply {
}

message DeleteUserRequest {
  uint32 id = 1[(validate.rules).uint32 = {gte: 1}];
}

message DeleteUserReply {
}

message UpdateCurrentUserRequest{
  optional string avatar = 1;
  string nickname = 2;
  string gender = 3;
}

message UpdateCurrentUserReply{
}

message ResetUserPasswordRequest{
  uint32 id = 1[(validate.rules).uint32 = {gt:0}];
}

message ResetUserPasswordReply{
}

message UpdateCurrentUserRoleRequest{
  uint32 roleId = 1[(validate.rules).uint32 = {gt:0}];
}

message UpdateCurrentUserRoleReply{
  string token = 1;
}

message UpdateCurrentUserPasswordRequest{
  string password = 1[(validate.rules).string = {min_len:6}];
  optional string oldPassword = 2[(validate.rules).string = {min_len:6}];
  optional string captchaId = 3[(validate.rules).string = {min_len:1}];
  optional string captcha = 4[(validate.rules).string = {min_len:1}];
}

message UpdateCurrentUserPasswordReply{
}

message UpdateCurrentUserSettingRequest{
  string setting = 1[(validate.rules).string = {min_len:6}];
}

message UpdateCurrentUserSettingReply{
}

message SendCurrentUserCaptchaRequest{
  string type = 1[(validate.rules).string = {min_len:1}];
}

message SendCurrentUserCaptchaReply{
  string uuid = 1;
  string captcha = 2;
  uint32 expire = 3;
}
