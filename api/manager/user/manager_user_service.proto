syntax = "proto3";

package manager.api.manager.user.v1;

option go_package = "./v1;v1";
option java_multiple_files = true;
option java_package = "manager.api.manager.user.v1";
option java_outer_classname = "UserV1";

import "api/manager/user/manager_user.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service User{

  // GetUser 获取指定的用户信息
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user",
    };
  }

  // ListUser 获取用户信息列表
  rpc ListUser (ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/users",
    };
  }

  // CreateUser 创建用户信息
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user",
      body: "*"
    };
  }

  // UpdateUser 更新用户信息
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user",
      body: "*"
    };
  }

  // UpdateUserStatus 更新用户信息状态
  rpc UpdateUserStatus (UpdateUserStatusRequest) returns (UpdateUserStatusReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/status",
      body: "*"
    };
  }

  // DeleteUser 删除用户信息
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/manager/api/v1/user",
    };
  }

  // GetCurrentUser 获取当前用户信息
  rpc GetCurrentUser (google.protobuf.Empty) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user/current",
    };
  }

  // ResetUserPassword 重置用户密码
  rpc ResetUserPassword(ResetUserPasswordRequest) returns (ResetUserPasswordReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user/password/reset",
      body: "*"
    };
  }

  // UpdateCurrentUser 更新当前用户信息
  rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (UpdateCurrentUserReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/info",
      body: "*"
    };
  }

  // UpdateCurrentUserRole 切换用户当前角色
  rpc UpdateCurrentUserRole (UpdateCurrentUserRoleRequest) returns (UpdateCurrentUserRoleReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/role",
      body: "*"
    };
  }

  // UpdateCurrentUserPassword 用户修改密码
  rpc UpdateCurrentUserPassword(UpdateCurrentUserPasswordRequest) returns (UpdateCurrentUserPasswordReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/password",
      body: "*"
    };
  }

  // UpdateCurrentUserSetting 用户设置保存
  rpc UpdateCurrentUserSetting(UpdateCurrentUserSettingRequest) returns (UpdateCurrentUserSettingReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/setting",
      body: "*"
    };
  }

  // SendCurrentUserCaptcha 发送用户验证吗
  rpc SendCurrentUserCaptcha(SendCurrentUserCaptchaRequest) returns (SendCurrentUserCaptchaReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user/current/captcha",
      body: "*"
    };
  }

  // GetUserLoginCaptcha 获取用户登陆验证吗
  rpc GetUserLoginCaptcha(google.protobuf.Empty) returns(GetUserLoginCaptchaReply){
    option (google.api.http) = {
      get: "/manager/api/v1/user/login/captcha",
    };
  }

  // UserLogin 用户登陆
  rpc UserLogin(UserLoginRequest) returns(UserLoginReply){
    option (google.api.http) = {
      post: "/manager/api/v1/user/login",
      body: "*"
    };
  }

  // UserLogout 用户退出
  rpc UserLogout(google.protobuf.Empty) returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/manager/api/v1/user/logout",
      body: "*"
    };
  }

  // UserRefreshToken 用户刷新token
  rpc UserRefreshToken(google.protobuf.Empty) returns(UserRefreshTokenReply){
    option (google.api.http) = {
      post: "/manager/api/v1/user/token/refresh",
      body: "*"
    };
  }

  // ListLoginLog 获取用户登陆信息列表
  rpc ListLoginLog (ListLoginLogRequest) returns (ListLoginLogReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user/login/logs",
    };
  }


}