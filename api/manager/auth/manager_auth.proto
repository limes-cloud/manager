syntax = "proto3";

package manager_auth;

option go_package = "./v1;v1";

import "validate/validate.proto";
import "google/protobuf/struct.proto";


message AuthRequest{
  string path = 1[(validate.rules).string = {min_len: 1}];
  string method = 2[(validate.rules).string = {in: ["GET","POST","PUT","DELETE"]}];
}

message AuthReply{
  uint32 userId = 1;
  string userName = 2;
  repeated uint32 roleIds = 3;
  repeated uint32 departmentIds = 4;
  repeated uint32 jobIds = 5;
}


message OAuthWayRequest {
  string keyword = 1;
  string user = 2;
}

message OAuthWayReply {
  string uuid = 1;
  string action = 2;
  string value = 3;
  string tip = 4;
  string keyword = 5;
  string codeField = 6;
}

message ReportOAuthCodeRequest {
  string code = 1[(validate.rules).string = {min_len:1}];
  string keyword = 2[(validate.rules).string = {min_len:1}];
  string uuid = 3[(validate.rules).string = {min_len:1}];
}

message ReportOAuthCodeReply {
}

message OAuthLoginRequest {
  string code = 1;
  string keyword = 2[(validate.rules).string = {min_len:1}];
  string uuid = 3[(validate.rules).string = {min_len:1}];
  string user = 4;
}

message OAuthLoginReply {
  bool isBind = 1;
  optional string token = 2;
}

message UserLoginRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:6}];
  string captchaId = 3[(validate.rules).string = {min_len:1}];
  string captcha = 4[(validate.rules).string = {min_len:1}];
}

message UserLoginReply{
  string token = 1;
}

message UserRefreshTokenReply{
  string token = 1;
}


message GetUserLoginCaptchaReply{
  string uuid = 1;
  string captcha = 2;
  uint32 expire = 3;
}


message ListLoginLogRequest {
  uint32 page = 1[(validate.rules).uint32 = {gte: 1}];
  uint32 pageSize = 2[(validate.rules).uint32 = {gte: 1,lte:50}];
  optional string username = 3;
  repeated int64 createdAts = 4;
}

message ListLoginLogReply { // fixed code
  message Log {
    string username = 1;
    string type = 2;
    string ip = 3;
    string address = 4;
    string browser = 5;
    string device = 6;
    int32 code = 7;
    string description = 8;
    uint32 createdAt = 9;
  }

  uint32 total = 1;
  repeated Log list = 2;
}


message OAuthBindRequest {
  string username = 1[(validate.rules).string = {min_len:6}];
  string password = 2[(validate.rules).string = {min_len:6}];
  string captchaId = 3[(validate.rules).string = {min_len:1}];
  string captcha = 4[(validate.rules).string = {min_len:1}];
  string keyword = 5[(validate.rules).string = {min_len:1}];
  string uuid = 6[(validate.rules).string = {min_len:1}];
}

message OAuthBindReply{
  string token = 1;
}