// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.24.4
// source: manager_error.proto

package errors

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	ErrorReason_NotFound              ErrorReason = 0
	ErrorReason_Database              ErrorReason = 1
	ErrorReason_Metadata              ErrorReason = 2
	ErrorReason_Transform             ErrorReason = 3
	ErrorReason_DepartmentPermissions ErrorReason = 4
	ErrorReason_RolePermissions       ErrorReason = 5
	ErrorReason_UserPermissions       ErrorReason = 6
	ErrorReason_MenuPermissions       ErrorReason = 7
	ErrorReason_EditSystemData        ErrorReason = 8
	ErrorReason_DeleteSystemData      ErrorReason = 9
	ErrorReason_NewCaptcha            ErrorReason = 10
	ErrorReason_VerifyCaptcha         ErrorReason = 11
	ErrorReason_RsaDecode             ErrorReason = 12
	ErrorReason_PasswordFormat        ErrorReason = 13
	ErrorReason_PasswordExpire        ErrorReason = 14
	ErrorReason_UserDisable           ErrorReason = 15
	ErrorReason_RoleDisable           ErrorReason = 16
	ErrorReason_UserPassword          ErrorReason = 17
	ErrorReason_NewToken              ErrorReason = 18
	ErrorReason_ParseToken            ErrorReason = 19
	ErrorReason_RefreshToken          ErrorReason = 20
	ErrorReason_EmptyToken            ErrorReason = 21
	ErrorReason_DeleteSelfRole        ErrorReason = 22
	ErrorReason_DeleteSelfDepartment  ErrorReason = 23
	ErrorReason_ParentMenu            ErrorReason = 24
	ErrorReason_SendEmailCaptcha      ErrorReason = 25
	ErrorReason_UsernameFormat        ErrorReason = 26
	ErrorReason_UsernameNotExist      ErrorReason = 27
	ErrorReason_DisableSelfUser       ErrorReason = 28
	ErrorReason_Forbidden             ErrorReason = 29
	ErrorReason_DeleteSelfUser        ErrorReason = 30
	ErrorReason_ResetSelfUserPassword ErrorReason = 31
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "NotFound",
		1:  "Database",
		2:  "Metadata",
		3:  "Transform",
		4:  "DepartmentPermissions",
		5:  "RolePermissions",
		6:  "UserPermissions",
		7:  "MenuPermissions",
		8:  "EditSystemData",
		9:  "DeleteSystemData",
		10: "NewCaptcha",
		11: "VerifyCaptcha",
		12: "RsaDecode",
		13: "PasswordFormat",
		14: "PasswordExpire",
		15: "UserDisable",
		16: "RoleDisable",
		17: "UserPassword",
		18: "NewToken",
		19: "ParseToken",
		20: "RefreshToken",
		21: "EmptyToken",
		22: "DeleteSelfRole",
		23: "DeleteSelfDepartment",
		24: "ParentMenu",
		25: "SendEmailCaptcha",
		26: "UsernameFormat",
		27: "UsernameNotExist",
		28: "DisableSelfUser",
		29: "Forbidden",
		30: "DeleteSelfUser",
		31: "ResetSelfUserPassword",
	}
	ErrorReason_value = map[string]int32{
		"NotFound":              0,
		"Database":              1,
		"Metadata":              2,
		"Transform":             3,
		"DepartmentPermissions": 4,
		"RolePermissions":       5,
		"UserPermissions":       6,
		"MenuPermissions":       7,
		"EditSystemData":        8,
		"DeleteSystemData":      9,
		"NewCaptcha":            10,
		"VerifyCaptcha":         11,
		"RsaDecode":             12,
		"PasswordFormat":        13,
		"PasswordExpire":        14,
		"UserDisable":           15,
		"RoleDisable":           16,
		"UserPassword":          17,
		"NewToken":              18,
		"ParseToken":            19,
		"RefreshToken":          20,
		"EmptyToken":            21,
		"DeleteSelfRole":        22,
		"DeleteSelfDepartment":  23,
		"ParentMenu":            24,
		"SendEmailCaptcha":      25,
		"UsernameFormat":        26,
		"UsernameNotExist":      27,
		"DisableSelfUser":       28,
		"Forbidden":             29,
		"DeleteSelfUser":        30,
		"ResetSelfUserPassword": 31,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_manager_error_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_manager_error_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_manager_error_proto_rawDescGZIP(), []int{0}
}

var File_manager_error_proto protoreflect.FileDescriptor

var file_manager_error_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0xbf, 0x0b, 0x0a, 0x0b, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x08, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x00, 0x1a, 0x12, 0xb2, 0x45, 0x0f, 0xe6, 0x95, 0xb0, 0xe6,
	0x8d, 0xae, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x12, 0x20, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x10, 0x01, 0x1a, 0x12, 0xb2, 0x45, 0x0f, 0xe6, 0x95,
	0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xba, 0x93, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf, 0x12, 0x20, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x10, 0x02, 0x1a, 0x12, 0xb2, 0x45, 0x0f,
	0xe5, 0x85, 0x83, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe5, 0xbc, 0x82, 0xe5, 0xb8, 0xb8, 0x12,
	0x24, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x03, 0x1a, 0x15,
	0xb2, 0x45, 0x12, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xe8, 0xbd, 0xac, 0xe6, 0x8d, 0xa2, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x30, 0x0a, 0x15, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x04,
	0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe6, 0x97, 0xa0, 0xe6, 0xad, 0xa4, 0xe9, 0x83, 0xa8, 0xe9, 0x97,
	0xa8, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0x12, 0x2a, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x05, 0x1a, 0x15, 0xb2, 0x45,
	0x12, 0xe6, 0x97, 0xa0, 0xe6, 0xad, 0xa4, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe6, 0x9d, 0x83,
	0xe9, 0x99, 0x90, 0x12, 0x2a, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x10, 0x06, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe6, 0x97, 0xa0,
	0xe6, 0xad, 0xa4, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0x12,
	0x2a, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x10, 0x07, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe6, 0x97, 0xa0, 0xe6, 0xad, 0xa4, 0xe8,
	0x8f, 0x9c, 0xe5, 0x8d, 0x95, 0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0x12, 0x35, 0x0a, 0x0e, 0x45,
	0x64, 0x69, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x10, 0x08, 0x1a,
	0x21, 0xb2, 0x45, 0x1e, 0xe7, 0xb3, 0xbb, 0xe7, 0xbb, 0x9f, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae,
	0xef, 0xbc, 0x8c, 0xe4, 0xb8, 0x8d, 0xe5, 0x85, 0x81, 0xe8, 0xae, 0xb8, 0xe4, 0xbf, 0xae, 0xe6,
	0x94, 0xb9, 0x12, 0x37, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x10, 0x09, 0x1a, 0x21, 0xb2, 0x45, 0x1e, 0xe7, 0xb3, 0xbb,
	0xe7, 0xbb, 0x9f, 0xe6, 0x95, 0xb0, 0xe6, 0x8d, 0xae, 0xef, 0xbc, 0x8c, 0xe4, 0xb8, 0x8d, 0xe5,
	0x85, 0x81, 0xe8, 0xae, 0xb8, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0x12, 0x28, 0x0a, 0x0a, 0x4e,
	0x65, 0x77, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x10, 0x0a, 0x1a, 0x18, 0xb2, 0x45, 0x15,
	0xe4, 0xba, 0x8c, 0xe7, 0xbb, 0xb4, 0xe7, 0xa0, 0x81, 0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x2b, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x10, 0x0b, 0x1a, 0x18, 0xb2, 0x45, 0x15, 0xe9, 0xaa, 0x8c,
	0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe5, 0xa4, 0xb1, 0xe8,
	0xb4, 0xa5, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x73, 0x61, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x10,
	0x0c, 0x1a, 0x12, 0xb2, 0x45, 0x0f, 0x72, 0x73, 0x61, 0xe8, 0xa7, 0xa3, 0xe5, 0xaf, 0x86, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x29, 0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x0d, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe5, 0xaf,
	0x86, 0xe7, 0xa0, 0x81, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe9, 0x94, 0x99, 0xe8, 0xaf, 0xaf,
	0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x10, 0x0e, 0x1a, 0x12, 0xb2, 0x45, 0x0f, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe5,
	0xb7, 0xb2, 0xe8, 0xbf, 0x87, 0xe6, 0x9c, 0x9f, 0x12, 0x26, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x0f, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xb7, 0xb2, 0xe8, 0xa2, 0xab, 0xe7, 0xa6, 0x81, 0xe7, 0x94, 0xa8,
	0x12, 0x26, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10,
	0x10, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0xe5, 0xb7, 0xb2, 0xe8,
	0xa2, 0xab, 0xe7, 0xa6, 0x81, 0xe7, 0x94, 0xa8, 0x12, 0x27, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x11, 0x1a, 0x15, 0xb2, 0x45, 0x12, 0xe7,
	0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xaf, 0x86, 0xe7, 0xa0, 0x81, 0xe9, 0x94, 0x99, 0xe8, 0xaf,
	0xaf, 0x12, 0x22, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x12, 0x1a,
	0x14, 0xb2, 0x45, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0xe7, 0x94, 0x9f, 0xe6, 0x88, 0x90, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x24, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x10, 0x13, 0x1a, 0x14, 0xb2, 0x45, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0xe8,
	0xa7, 0xa3, 0xe6, 0x9e, 0x90, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x2a, 0x0a, 0x0c, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x14, 0x1a, 0x18, 0xa8,
	0x45, 0x91, 0x03, 0xb2, 0x45, 0x11, 0xe5, 0x88, 0xb7, 0xe6, 0x96, 0xb0, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0xe5, 0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x24, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x10, 0x15, 0x1a, 0x14, 0xb2, 0x45, 0x11, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe7, 0xa9, 0xba, 0x12, 0x3e, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x52, 0x6f, 0x6c, 0x65, 0x10,
	0x16, 0x1a, 0x2a, 0xb2, 0x45, 0x27, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe5, 0x88, 0xa0, 0xe9,
	0x99, 0xa4, 0xe8, 0x87, 0xaa, 0xe5, 0xb7, 0xb1, 0xe7, 0x9a, 0x84, 0xe5, 0xbd, 0x93, 0xe5, 0x89,
	0x8d, 0xe6, 0x89, 0x80, 0xe5, 0xb1, 0x9e, 0xe8, 0xa7, 0x92, 0xe8, 0x89, 0xb2, 0x12, 0x44, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x44, 0x65, 0x70, 0x61, 0x72,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x17, 0x1a, 0x2a, 0xb2, 0x45, 0x27, 0xe4, 0xb8, 0x8d, 0xe8,
	0x83, 0xbd, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe8, 0x87, 0xaa, 0xe5, 0xb7, 0xb1, 0xe7, 0x9a,
	0x84, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe6, 0x89, 0x80, 0xe5, 0xb1, 0x9e, 0xe9, 0x83, 0xa8,
	0xe9, 0x97, 0xa8, 0x12, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x10, 0x18, 0x1a, 0x2a, 0xb2, 0x45, 0x27, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe8, 0x8f,
	0x9c, 0xe5, 0x8d, 0x95, 0xe7, 0x9a, 0x84, 0xe7, 0x88, 0xb6, 0xe8, 0x8f, 0x9c, 0xe5, 0x8d, 0x95,
	0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe4, 0xb8, 0xba, 0xe8, 0x87, 0xaa, 0xe5, 0xb7, 0xb1, 0x12,
	0x34, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x10, 0x19, 0x1a, 0x1e, 0xb2, 0x45, 0x1b, 0xe5, 0x8f, 0x91, 0xe9, 0x80, 0x81,
	0xe9, 0x82, 0xae, 0xe7, 0xae, 0xb1, 0xe9, 0xaa, 0x8c, 0xe8, 0xaf, 0x81, 0xe7, 0xa0, 0x81, 0xe5,
	0xa4, 0xb1, 0xe8, 0xb4, 0xa5, 0x12, 0x2c, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x10, 0x1a, 0x1a, 0x18, 0xb2, 0x45, 0x15, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x90, 0x8d, 0xe6, 0xa0, 0xbc, 0xe5, 0xbc, 0x8f, 0xe9, 0x94, 0x99,
	0xe8, 0xaf, 0xaf, 0x12, 0x28, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x4e,
	0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x1b, 0x1a, 0x12, 0xb2, 0x45, 0x0f, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xb8, 0x8d, 0xe5, 0xad, 0x98, 0xe5, 0x9c, 0xa8, 0x12, 0x30, 0x0a,
	0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x1c, 0x1a, 0x1b, 0xb2, 0x45, 0x18, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe7, 0xa6, 0x81,
	0xe7, 0x94, 0xa8, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0x12,
	0x25, 0x0a, 0x09, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x10, 0x1d, 0x1a, 0x16,
	0xa8, 0x45, 0x93, 0x03, 0xb2, 0x45, 0x0f, 0xe6, 0x97, 0xa0, 0xe6, 0x8e, 0xa5, 0xe5, 0x8f, 0xa3,
	0xe6, 0x9d, 0x83, 0xe9, 0x99, 0x90, 0x12, 0x2f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x10, 0x1e, 0x1a, 0x1b, 0xb2, 0x45, 0x18, 0xe4,
	0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe5, 0xbd, 0x93, 0xe5, 0x89,
	0x8d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0x12, 0x3c, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x10, 0x1f, 0x1a, 0x21, 0xb2, 0x45, 0x1e, 0xe4, 0xb8, 0x8d, 0xe8, 0x83, 0xbd, 0xe9, 0x87, 0x8d,
	0xe7, 0xbd, 0xae, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe8, 0xb4, 0xa6, 0xe5, 0x8f, 0xb7, 0xe5,
	0xaf, 0x86, 0xe7, 0xa0, 0x81, 0x1a, 0x04, 0xa0, 0x45, 0xc8, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e,
	0x2f, 0x3b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_manager_error_proto_rawDescOnce sync.Once
	file_manager_error_proto_rawDescData = file_manager_error_proto_rawDesc
)

func file_manager_error_proto_rawDescGZIP() []byte {
	file_manager_error_proto_rawDescOnce.Do(func() {
		file_manager_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_manager_error_proto_rawDescData)
	})
	return file_manager_error_proto_rawDescData
}

var file_manager_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_manager_error_proto_goTypes = []interface{}{
	(ErrorReason)(0), // 0: manager_error.ErrorReason
}
var file_manager_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_manager_error_proto_init() }
func file_manager_error_proto_init() {
	if File_manager_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_manager_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_manager_error_proto_goTypes,
		DependencyIndexes: file_manager_error_proto_depIdxs,
		EnumInfos:         file_manager_error_proto_enumTypes,
	}.Build()
	File_manager_error_proto = out.File
	file_manager_error_proto_rawDesc = nil
	file_manager_error_proto_goTypes = nil
	file_manager_error_proto_depIdxs = nil
}
