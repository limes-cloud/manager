syntax = "proto3";

package manager_user;
option go_package = "./v1;v1";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "manager_user.proto";


service Service {
  // CurrentUser 获取当前用户信息
  rpc CurrentUser (google.protobuf.Empty) returns (User) {
    option (google.api.http) = {
      get: "/manager/v1/user/current",
    };
  }

  // PageUser 新增用户信息
  rpc PageUser (PageUserRequest) returns (PageUserReply) {
    option (google.api.http) = {
      get: "/manager/v1/users"
    };
  }

  // AddUser 新增用户信息
  rpc AddUser (AddUserRequest) returns (AddUserReply) {
    option (google.api.http) = {
      post: "/manager/v1/user",
      body: "*",
    };
  }

  // ChangeUserPasswordCaptcha 用户修改密码验证码
  rpc ChangeUserPasswordCaptcha(google.protobuf.Empty) returns (CaptchaReply) {
    option (google.api.http) = {
      post: "/manager/v1/user/password/captcha",
    };
  }

  // ResetUserPassword 重置用户密码
  rpc ResetUserPassword(ResetUserPasswordRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/manager/v1/user/password/reset",
      body: "*"
    };
  }

  // ChangeUserPassword 用户修改密码
  rpc ChangeUserPassword(ChangeUserPasswordRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/manager/v1/user/password/change",
      body: "*"
    };
  }

  // DisableUser 禁用用户
  rpc DisableUser (DisableUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/manager/v1/user/disable",
      body: "*",
    };
  }

  // DisableUser 禁用用户
  rpc EnableUser (EnableUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/manager/v1/user/enable",
      body: "*",
    };
  }

  // DisableUser 禁用用户
  rpc OfflineUser (OfflineUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/manager/v1/user/offline",
      body: "*",
    };
  }

  // UpdateUser 更新用户信息
  rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/manager/v1/user",
      body: "*",
    };
  }

  // UpdateCurrentUser 更新用户基础信息
  rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/manager/v1/user/current",
      body: "*",
    };
  }

  // DeleteUser 删除用户信息
  rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/manager/v1/user",
    };
  }

  // SwitchCurrentUserRole 切换用户当前角色
  rpc SwitchCurrentUserRole (SwitchCurrentUserRoleRequest) returns (SwitchCurrentUserRoleReply) {
    option (google.api.http) = {
      post: "/manager/v1/user/role/switch",
      body: "*"
    };
  }

  rpc UserLogin(UserLoginRequest) returns(UserLoginReply){
    option (google.api.http) = {
      post: "/manager/v1/user/login",
      body: "*"
    };
  }

  rpc UserLoginCaptcha(google.protobuf.Empty) returns(CaptchaReply){
    option (google.api.http) = {
      post: "/manager/v1/user/login/captcha"
    };
  }

  rpc UserLogout(google.protobuf.Empty) returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/manager/v1/user/logout",
    };
  }

  rpc UserRefreshToken(google.protobuf.Empty) returns(UserRefreshTokenReply){
    option (google.api.http) = {
      post: "/manager/v1/user/token/refresh",
    };
  }

}