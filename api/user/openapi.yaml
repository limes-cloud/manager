# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    version: 0.0.1
paths:
    /manager/api/v1/user:
        get:
            tags:
                - User
            description: GetUser 获取角色信息
            operationId: User_GetUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserObject'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            description: UpdateUser 更新角色信息
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - User
            description: CreateUser 创建角色信息
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            description: DeleteUser 删除角色信息
            operationId: User_DeleteUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/user/current:
        get:
            tags:
                - User
            description: GetCurrentUser 获取当前用户信息
            operationId: User_GetCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserObject'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/user/password/reset:
        post:
            tags:
                - User
            description: UpdateUser 更新角色信息
            operationId: User_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /manager/api/v1/users:
        get:
            tags:
                - User
            description: ListUser 获取角色信息列表
            operationId: User_ListUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: deptId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: jobId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: username
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: boolean
                - name: loggedAts
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: createdAts
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        CreateUserRequest:
            type: object
            properties:
                nickname:
                    type: string
                username:
                    type: string
                deptId:
                    type: integer
                    format: uint32
                jobId:
                    type: integer
                    format: uint32
        DeleteUserReply:
            type: object
            properties: {}
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserObject'
        ResetPasswordRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        Result:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserReply:
            type: object
            properties: {}
        UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickname:
                    type: string
                deptId:
                    type: integer
                    format: uint32
                jobId:
                    type: integer
                    format: uint32
                status:
                    type: boolean
        UserObject:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                nickname:
                    type: string
                username:
                    type: string
                avatar:
                    type: string
                status:
                    type: boolean
                loggedAt:
                    type: integer
                    format: uint32
                createdAt:
                    type: integer
                    format: uint32
                updatedAt:
                    type: integer
                    format: uint32
                deptId:
                    type: integer
                    format: uint32
                jobId:
                    type: integer
                    format: uint32
                dept:
                    $ref: '#/components/schemas/Result'
                job:
                    $ref: '#/components/schemas/Result'
tags:
    - name: User
